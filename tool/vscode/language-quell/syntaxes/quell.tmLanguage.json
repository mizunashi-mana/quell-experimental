{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Quell",
    "scopeName": "source.quell",
    "patterns": [
        {
            "include": "#literal"
        },
        {
            "include": "#special"
        },
        {
            "include": "#brace"
        },
        {
            "include": "#reserved_id"
        },
        {
            "include": "#reserved_sym"
        },
        {
            "include": "#var_id"
        },
        {
            "include": "#var_sym"
        },
        {
            "include": "#con_id"
        },
        {
            "include": "#con_sym"
        }
    ],
    "repository": {
        "literal": {
            "patterns": [
                {
                    "include": "#rational"
                },
                {
                    "include": "#integer"
                },
                {
                    "include": "#bytestring"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#bytechar"
                },
                {
                    "include": "#char"
                },
                {
                    "include": "#interp_string_part"
                }
            ]
        },
        "special": {
            "patterns": [
                {
                    "include": "#special_paren"
                }
            ]
        },
        "brace": {
            "patterns": []
        },
        "reserved_id": {
            "patterns": [
                {
                    "include": "#reserved_id_control"
                },
                {
                    "include": "#reserved_id_operator"
                },
                {
                    "include": "#reserved_id_other"
                },
                {
                    "include": "#reserved_id_variable"
                }
            ]
        },
        "reserved_sym": {
            "patterns": [
                {
                    "include": "#reserved_sym_operator"
                },
                {
                    "include": "#reserved_sym_variable"
                }
            ]
        },
        "var_id": {
            "match": "[\\p{Ll}\\p{Lo}_][\\p{L}\\p{M}\\p{N}\\p{Cf}'_&&[^\\v\\t\\x{200E}\\x{200F}\\p{Z}\\r\\n\\f]]*",
            "name": "variable.parameter.quell"
        },
        "var_sym": {
            "match": "[\\p{Pc}\\p{Pd}\\p{Po}\\p{S}&&[^\\(\\),\\[\\]`;\\.#\"\\{\\}⦃⦄❴❵]][\\p{Pc}\\p{Pd}\\p{Po}\\p{S}\\p{Lm}\\p{M}\\p{Nl}\\p{No}\\p{Cf}'&&[^\\(\\),\\[\\]`;\\.#\"\\{\\}⦃⦄❴❵\\v\\t\\x{200E}\\x{200F}\\p{Z}\\r\\n\\f]]*",
            "name": "variable.parameter.quell"
        },
        "con_id": {
            "match": "[\\p{Lu}\\p{Lt}][\\p{L}\\p{M}\\p{N}\\p{Cf}'_&&[^\\v\\t\\x{200E}\\x{200F}\\p{Z}\\r\\n\\f]]*",
            "name": "variable.parameter.quell"
        },
        "con_sym": {
            "match": ":[\\p{Pc}\\p{Pd}\\p{Po}\\p{S}\\p{Lm}\\p{M}\\p{Nl}\\p{No}\\p{Cf}'&&[^\\(\\),\\[\\]`;\\.#\"\\{\\}⦃⦄❴❵\\v\\t\\x{200E}\\x{200F}\\p{Z}\\r\\n\\f]]+",
            "name": "variable.parameter.quell"
        },
        "rational": {
            "match": "[+\\-]?\\p{Nd}[\\p{Nd}_]*([eE][+\\-]?\\p{Nd}[\\p{Nd}_]*|\\.\\p{Nd}[\\p{Nd}_]*)",
            "name": "constant.numeric.quell"
        },
        "integer": {
            "match": "",
            "name": "constant.numeric.quell"
        },
        "bytestring": {
            "match": "",
            "name": "string.quoted.double.quell"
        },
        "string": {
            "match": "",
            "name": "string.quoted.double.quell"
        },
        "bytechar": {
            "match": "",
            "name": "string.quoted.single.quell"
        },
        "char": {
            "match": "",
            "name": "string.quoted.single.quell"
        },
        "interp_string_part": {
            "match": "",
            "name": "string.quoted.double.quell"
        },
        "special_paren": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.paren.open"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.paren.close"
                }
            },
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "reserved_id_control": {
            "match": "#of|#when",
            "name": "keyword.control.quell"
        },
        "reserved_id_operator": {
            "match": "#as|#case|#derive|#do|#let|#letrec|#record|#sig|#use|#yield",
            "name": "keyword.operator.quell"
        },
        "reserved_id_other": {
            "match": "#data|#export|#family|#foreign|#impl|#infix|#mod|#newtype|#pattern|#role|#static|#type|#where",
            "name": "keyword.other.quell"
        },
        "reserved_id_variable": {
            "match": "#Default|#Self",
            "name": "keyword.other.quell"
        },
        "reserved_sym_operator": {
            "match": "(!|=|\\?|@|\\/|∀|\\|λ|~)",
            "name": "keyword.operator.quell"
        },
        "reserved_sym_variable": {
            "match": "(_|->|→|<-|←|=>|⇒|<=|⇐|\\||:)",
            "name": "variable.language.quell"
        }
    }
}
